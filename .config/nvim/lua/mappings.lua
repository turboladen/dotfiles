-------------------------------------------------------------------------------
-- auto-session
-------------------------------------------------------------------------------
-- vim.api.nvim_set_keymap("n", "<leader>sr", ":RestoreSession<CR>", {noremap = true, silent = true})
-------------------------------------------------------------------------------
-- neogit
-------------------------------------------------------------------------------
-- vim.api.nvim_set_keymap("n", "<leader>gs", [[<cmd>lua require("neogit").open({kind = "split"})<CR>]], {silent = true})
-------------------------------------------------------------------------------
-- nvim-dap-ui
-------------------------------------------------------------------------------
-- vim.api.nvim_set_keymap("n", "<leader>dt", "<cmd>lua require('dapui').toggle()<CR>", {silent = true, noremap = true})
-------------------------------------------------------------------------------
-- nvim-dap
-------------------------------------------------------------------------------
-- vim.api.nvim_set_keymap("n", "<F5>", "<cmd>lua require('dap').continue()<CR>", {silent = true, noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>dk", "<cmd>lua require('dap').step_out()<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>dl", "<cmd>lua require('dap').step_into()<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>dj", "<cmd>lua require('dap').step_over()<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>db", "<cmd>lua require('dap').toggle_breakpoint()<CR>", {noremap = true})
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>dB",
--     "<cmd>lua require('dap').set_breakpoint(vim.fn.input('Breakpoint condition: '))<CR>",
--     {noremap = true}
-- )
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>lp",
--     "<cmd>lua require('dap').set_breakpoint(nil, nil, vim.fn.input('Log point message: '))<CR>",
--     {noremap = true}
-- )
-- vim.api.nvim_set_keymap("n", "<leader>dr", "<cmd>lua require('dap').repl.open()<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>dL", "<cmd>lua require('dap').run_last()<CR>", {noremap = true})
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>di",
--     "<cmd>lua require('dap.ui.variables').hover()<CR>",
--     {silent = true, noremap = true}
-- )
-- vim.api.nvim_set_keymap(
--     "v",
--     "<leader>di",
--     "<cmd>lua require('dap.ui.variables').visual_hover()<CR>",
--     {silent = true, noremap = true}
-- )
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>d?",
--     "<cmd>lua require('dap.ui.variables').scopes()<CR>",
--     {silent = true, noremap = true}
-- )
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>de",
--     "<cmd>lua require('dap').set_exception_breakpoints({'all'})<CR>",
--     {noremap = true}
-- )
-------------------------------------------------------------------------------
-- nvim-hlslens
-------------------------------------------------------------------------------
-- vim.api.nvim_set_keymap(
--     "n",
--     "n",
--     "<cmd>execute('normal! ' . v:count1 . 'n')<CR><cmd>lua require('hlslens').start()<CR>",
--     {silent = true, noremap = true}
-- )
-- vim.api.nvim_set_keymap(
--     "n",
--     "N",
--     "<cmd>execute('normal! ' . v:count1 . 'N')<CR><cmd>lua require('hlslens').start()<CR>",
--     {silent = true, noremap = true}
-- )
-- vim.api.nvim_set_keymap("n", "*", "*<cmd>lua require('hlslens').start()<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "#", "#<cmd>lua require('hlslens').start()<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "g*", "g*<cmd>lua require('hlslens').start()<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "g#", "g#<cmd>lua require('hlslens').start()<CR>", {noremap = true})
-------------------------------------------------------------------------------
-- nvim-lint
-------------------------------------------------------------------------------
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>l",
--     "<cmd>lua require('lint').try_lint()<CR>",
--     -- {silent = true, noremap = true}
--     {noremap = true}
-- )
-------------------------------------------------------------------------------
-- telescope.nvim
-------------------------------------------------------------------------------
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader><space>",
--     "<cmd>lua require('telescope.builtin').find_files()<CR>",
--     {noremap = true, silent = true}
-- )
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader><CR>",
--     "<cmd>lua require('telescope.builtin').buffers()<CR>",
--     {noremap = true, silent = true}
-- )
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>/",
--     "<cmd>lua require('telescope.builtin').live_grep()<CR>",
--     {noremap = true, silent = true}
-- )
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>fk",
--     "<cmd>lua require('telescope.builtin').grep_string()<CR>",
--     {noremap = true, silent = true}
-- )
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>fm",
--     "<cmd>lua require('telescope.builtin').marks()<CR>",
--     {noremap = true, silent = true}
-- )
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>fo",
--     "<cmd>lua require('telescope.builtin').oldfiles()<CR>",
--     {noremap = true, silent = true}
-- )
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>ft",
--     "<cmd>lua require('telescope.builtin').grep_string({ search = 'TODO' })<CR>",
--     {noremap = true, silent = true}
-- )
-------------------------------------------------------------------------------
-- telescope-github.nvim
-------------------------------------------------------------------------------
-- vim.api.nvim_set_keymap("n", "<leader>ghi", "<cmd>Telescope gh issues<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>ghp", "<cmd>Telescope gh pull_request<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>ghg", "<cmd>Telescope gh gist<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>ghr", "<cmd>Telescope gh run<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>gh", "<cmd>Telescope gh ", {noremap = true})
-------------------------------------------------------------------------------
-- trouble.nvim
-------------------------------------------------------------------------------
-- local opts = {silent = true, noremap = true}
-- vim.api.nvim_set_keymap("n", "<leader>xx", "<cmd>Trouble<cr>", opts)
-- vim.api.nvim_set_keymap("n", "<leader>xw", "<cmd>TroubleToggle workspace_diagnostics<cr>", opts)
-- vim.api.nvim_set_keymap("n", "<leader>xd", "<cmd>TroubleToggle document_diagnostics<cr>", opts)
-- vim.api.nvim_set_keymap("n", "<leader>xr", "<cmd>TroubleRefresh<cr>", opts)
-- vim.api.nvim_set_keymap("n", "<leader>xR", "<cmd>TroubleToggle lsp_references<cr>", opts)
-- vim.api.nvim_set_keymap("n", "<leader>xD", "<cmd>TroubleToggle lsp_definitions<cr>", opts)
-- vim.api.nvim_set_keymap("n", "<leader>xT", "<cmd>TroubleToggle lsp_type_definitions<cr>", opts)
-- vim.api.nvim_set_keymap("n", "<leader>xl", "<cmd>TroubleToggle loclist<cr>", opts)
-- vim.api.nvim_set_keymap("n", "<leader>xq", "<cmd>TroubleToggle quickfix<cr>", opts)
-- jump to the next item, skipping the groups
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>]",
--     "<cmd>lua require('trouble').next({skip_groups = true, jump = true})<cr>",
--     opts
-- )
-- jump to the previous item, skipping the groups
-- vim.api.nvim_set_keymap(
--     "n",
--     "<leader>[",
--     "<cmd>lua require('trouble').previous({skip_groups = true, jump = true})<cr>",
--     opts
-- )
-------------------------------------------------------------------------------
-- vim-ripgrep
-------------------------------------------------------------------------------
-- vim.api.nvim_set_keymap("n", "<leader>.", ":Rg<SPACE>", {noremap = true})
-------------------------------------------------------------------------------
-- vim-test
-------------------------------------------------------------------------------
-- vim.api.nvim_set_keymap("n", "<leader>tn", "<cmd>TestNearest<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>tf", "<cmd>TestFile<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>ta", "<cmd>TestSuite<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>tl", "<cmd>TestLast<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>tv", "<cmd>TestVisit<CR>", {noremap = true})
-------------------------------------------------------------------------------
-- vim-ultest
-------------------------------------------------------------------------------
-- vim.api.nvim_set_keymap("n", "]t", "<Plug>(ultest-next-fail)", {})
-- vim.api.nvim_set_keymap("n", "[t", "<Plug>(ultest-prev-fail)", {})
-- vim.api.nvim_set_keymap("n", "<leader>tu", "<cmd>Ultest<CR>", {noremap = true})
-- vim.api.nvim_set_keymap("n", "<leader>tt", "<cmd>UltestSummary<CR>", {noremap = true})
